[tool.poetry]
name = "avalanchepy"
version = "0.0.1"
description = "Implementation of avalanche sampling algorithm as proposed in https://arxiv.org/abs/2311.16218"
authors = ["Maximilian Herzog <fmaximilian.herzog@stud.uni-heidelberg.de>"]
repository = "https://github.com/maxiherzog/avalanchepy"
documentation = "https://maxiherzog.github.io/avalanchepy/"
readme = "README.md"
packages = [
  {include = "avalanchepy"}
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
numpy = "^2.0.0"
tqdm = "^4.66.4"
types-tqdm = "^4.66.0.20240417"
ipykernel = "^6.29.5"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.4.0"
tox = "^4.11.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.23.0"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
    # Avoid specifiying long messages outside the exception class
    "TRY003",
    # Ternary operator should be used for simple cases
    "SIM108",
]

[tool.ruff.format]
preview = true
